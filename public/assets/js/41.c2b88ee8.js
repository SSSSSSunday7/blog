(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{462:function(t,a,s){"use strict";s.r(a);var r=s(2),e=Object(r.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"springboot配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springboot配置"}},[t._v("#")]),t._v(" Springboot配置")]),t._v(" "),a("h2",{attrs:{id:"_1-读取配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-读取配置文件"}},[t._v("#")]),t._v(" 1. 读取配置文件")]),t._v(" "),a("p",[t._v("1）@Value")]),t._v(" "),a("p",[t._v("2）Environment")]),t._v(" "),a("p",[t._v("3）@CnfigurationProperties")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"value"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#value"}},[t._v("#")]),t._v(" @Value")]),t._v(" "),a("p",[t._v('在实体类的属性上加入@Value("${变量名}")可以读取到配置文件里的变量，适合注入单个变量')]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010143640462.png",alt:"image-20231010143640462"}})]),t._v(" "),a("h3",{attrs:{id:"environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" Environment")]),t._v(" "),a("p",[t._v("Environment是一个类，本身存在IOC当中，需要使用@AutoWired注入")]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010143555789.png",alt:"image-20231010143555789"}})]),t._v(" "),a("p",[t._v("可以直接使用Environment实例对象的"),a("em",[t._v('getProperty("变量名")')])]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010144259694.png",alt:"image-20231010144259694"}})]),t._v(" "),a("p",[t._v("可以方便的获取多个变量，更加精炼")]),t._v(" "),a("h3",{attrs:{id:"configurationproperties"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#configurationproperties"}},[t._v("#")]),t._v(" @ConfigurationProperties")]),t._v(" "),a("p",[t._v("该注解直接加在类上")]),t._v(" "),a("p",[t._v("会自动将和配置文件同名的变量注入")]),t._v(" "),a("p",[a("strong",[t._v("例如：")])]),t._v(" "),a("p",[t._v("​\t配置文件中有名为name的变量为"),a("em",[t._v("zhangsan")]),t._v("，")]),t._v(" "),a("p",[t._v("​\t那么添加了该配置的类中如果有名为name的属性，那么")]),t._v(" "),a("p",[t._v("​\t则会自动将 "),a("em",[t._v("zhangsan")]),t._v(" 注入该类的name属性。")]),t._v(" "),a("p",[a("em",[t._v("如果你想要将对象中的变量注入，则需要在注解上加prefix属性")])]),t._v(" "),a("p",[a("strong",[t._v("例如：")]),t._v(" 当你想要将person对象中的name值注入类中的name属性则"),a("img",{attrs:{src:"/image-20231010145350791.png",alt:"image-20231010145350791"}})]),t._v(" "),a("p",[t._v("这样会自动读取person类下的所有属性，遇到能对应的属性就注入")]),t._v(" "),a("p",[a("strong",[t._v("注意：")]),a("img",{attrs:{src:"/image-20231010145617672.png",alt:"image-20231010145617672"}})]),t._v(" "),a("p",[t._v("加入该注解后有可能会弹出这个警告框，点击open会进入文档，推荐在pom文件里加入一个SpringBoot配置处理器加入以后就不弹警告了，并且在配置文件写变量时会多一个提示."),a("em",[t._v("（导入坐标后记得刷新）")])]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010150041766.png",alt:"image-20231010150041766"}})]),t._v(" "),a("h2",{attrs:{id:"_2-springboot动态切换配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-springboot动态切换配置文件"}},[t._v("#")]),t._v(" 2. SpringBoot动态切换配置文件")]),t._v(" "),a("h3",{attrs:{id:"profile"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#profile"}},[t._v("#")]),t._v(" profile")]),t._v(" "),a("p",[t._v("1）profile配置方式")]),t._v(" "),a("p",[t._v("​\t\t多profile方式")]),t._v(" "),a("p",[t._v("​\t\tyml多文档方式")]),t._v(" "),a("p",[t._v("2）profile激活方式")]),t._v(" "),a("p",[t._v("​\t\t配置文件")]),t._v(" "),a("p",[t._v("​\t\t虚拟机参数")]),t._v(" "),a("p",[t._v("​\t\t命令行参数")]),t._v(" "),a("h4",{attrs:{id:"多profile方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#多profile方式"}},[t._v("#")]),t._v(" 多profile方式")]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010150921577.png",alt:"image-20231010150921577"}})]),t._v(" "),a("p",[t._v("像这样在默认配置文件名后加上"),a("code",[t._v("-xxx")]),t._v("就能表示是不同环境的配置文件")]),t._v(" "),a("blockquote",[a("p",[t._v("在默认配置文件"),a("em",[t._v("application.properties")]),t._v("或"),a("em",[t._v("yml,yaml")]),t._v("中写入"),a("code",[t._v("spring.profiles.active=dev")]),t._v("表示使用dev配置文件")])]),t._v(" "),a("h4",{attrs:{id:"yaml多文档方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#yaml多文档方式"}},[t._v("#")]),t._v(" yaml多文档方式")]),t._v(" "),a("p",[a("strong",[t._v("如下：")])]),t._v(" "),a("p",[t._v("可以在同一文档中写入不同的配置，更加简洁，使用  "),a("code",[t._v("---")]),t._v("分割")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8080")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#表示选中的环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("profiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("active")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#开发环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8081")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on-profile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dev "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#环境命名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#测试环境")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("server")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8082")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("spring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("activate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on-profile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("h4",{attrs:{id:"虚拟机参数切换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#虚拟机参数切换"}},[t._v("#")]),t._v(" 虚拟机参数切换")]),t._v(" "),a("p",[t._v("先到IDEA的"),a("img",{attrs:{src:"/image-20231010163828998.png",alt:"image-20231010163828998"}})]),t._v(" "),a("p",[t._v("编辑处")]),t._v(" "),a("p",[t._v("然后"),a("img",{attrs:{src:"/image-20231010163856484.png",alt:"image-20231010163856484"}})]),t._v(" "),a("p",[t._v("添加虚拟机选项，并在参数里添加"),a("code",[t._v("-Dspring.profiles.active=test")])]),t._v(" "),a("p",[t._v("即可通过test配置文件来运行项目，"),a("em",[t._v("=")]),t._v("  后方的参数可替换为dev等")]),t._v(" "),a("h4",{attrs:{id:"命令行实参"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令行实参"}},[t._v("#")]),t._v(" 命令行实参")]),t._v(" "),a("p",[t._v("如图，在参数里写入 "),a("code",[t._v("--spring.profiles.active=test")]),t._v("和虚拟机参数效果一样")]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010164523482.png",alt:"image-20231010164523482"}})]),t._v(" "),a("blockquote",[a("p",[t._v("在命令行里启动的方式一样，如图名为SpringBootDemo01-0.0.1-SNAPSHOT.jar的jar使用 test 配置文件启动")]),t._v(" "),a("p",[a("img",{attrs:{src:"/image-20231010165107305.png",alt:"image-20231010165107305"}})])]),t._v(" "),a("h2",{attrs:{id:"_3-springboot配置加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-springboot配置加载顺序"}},[t._v("#")]),t._v(" 3. SpringBoot配置加载顺序")]),t._v(" "),a("h3",{attrs:{id:"内部加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内部加载顺序"}},[t._v("#")]),t._v(" 内部加载顺序")]),t._v(" "),a("p",[t._v("如图"),a("img",{attrs:{src:"/image-20231010170041846.png",alt:"image-20231010170041846"}})]),t._v(" "),a("blockquote",[a("p",[t._v("maven项目的resource文件夹对应的是classpath的根目录，也就是第四个")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("注意，项目的根目录和模块的根目录不要弄混了")])])]),t._v(" "),a("h3",{attrs:{id:"资源访问路径"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#资源访问路径"}},[t._v("#")]),t._v(" 资源访问路径")]),t._v(" "),a("p",[t._v("也就是整个项目所有资源的访问路径，默认是"),a("code",[t._v("/")]),t._v(" ，可以在配置文件中修改成例如"),a("code",[t._v("/demo")]),t._v("，这样整个SpringBoot项目的资源都会在"),a("code",[t._v("/demo")]),t._v(" 下")]),t._v(" "),a("h3",{attrs:{id:"外部加载顺序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#外部加载顺序"}},[t._v("#")]),t._v(" 外部加载顺序")]),t._v(" "),a("p",[t._v("详情参考 ("),a("a",{attrs:{href:"https://www.springcloud.cc/spring-boot.html#boot-features-external-config",target:"_blank",rel:"noopener noreferrer"}},[t._v("Spring Boot 中文文档 参考手册 中文版 (springcloud.cc)"),a("OutboundLink")],1),t._v(")")]),t._v(" "),a("h2",{attrs:{id:"_4-其他"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-其他"}},[t._v("#")]),t._v(" 4.其他")]),t._v(" "),a("h3",{attrs:{id:"_4-1-springboot的strater"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-springboot的strater"}},[t._v("#")]),t._v(" 4.1 Springboot的strater")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一般构造器能选的依赖基本都是starter")])]),t._v(" "),a("li",[a("p",[t._v("strat由依赖和配置类构成")])]),t._v(" "),a("li",[a("p",[t._v("Springboot的strater都是自带配置类的，所以才能在application.properties里快速管理")])])]),t._v(" "),a("h3",{attrs:{id:"_4-2-springbootapplication"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-springbootapplication"}},[t._v("#")]),t._v(" 4.2 @SpringbootApplication")]),t._v(" "),a("blockquote",[a("p",[t._v("该注解由三个注解构成")]),t._v(" "),a("p",[t._v("@SpringbootConfiguration")]),t._v(" "),a("p",[t._v("@EnableAutoConfiguration")]),t._v(" "),a("p",[t._v("@ComponentScan")])]),t._v(" "),a("ul",[a("li",[t._v("@SpringbootConfiguration只继承了@Configuration，两者基本一致，所以你可以在Springboot主程序里直接用@Bean，故启动类也可以当配置类用")]),t._v(" "),a("li",[t._v("@EnableAutoConfiguration启动SpringBoot内置的自动配置功能")]),t._v(" "),a("li",[t._v("@ComponentScan用于扫描启动类包下的所有Bean，一般都是同级的")])])])}),[],!1,null,null,null);a.default=e.exports}}]);