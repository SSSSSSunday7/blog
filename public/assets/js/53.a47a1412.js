(window.webpackJsonp=window.webpackJsonp||[]).push([[53],{485:function(t,s,a){"use strict";a.r(s);var n=a(2),_=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"作用域和闭包、垃圾回收机制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#作用域和闭包、垃圾回收机制"}},[t._v("#")]),t._v(" 作用域和闭包、垃圾回收机制")]),t._v(" "),s("blockquote",[s("p",[t._v("了解作用域链的查找机制，使用闭包创建隔离作用域，避免全局变量污染。")])]),t._v(" "),s("ul",[s("li",[t._v("作用域规定了变量能访问的范围，离开范围就不能访问\n"),s("ul",[s("li",[t._v("局部作用域")]),t._v(" "),s("li",[t._v("全局作用域")])])])]),t._v(" "),s("h2",{attrs:{id:"_1、局部作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、局部作用域"}},[t._v("#")]),t._v(" 1、局部作用域")]),t._v(" "),s("h3",{attrs:{id:"_1-1函数作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1函数作用域"}},[t._v("#")]),t._v(" 1.1函数作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("只能在函数内部访问，外部无法直接访问")])]),t._v(" "),s("ul",[s("li",[t._v("函数内部声明的变量，在函数外部无法被访问")]),t._v(" "),s("li",[s("strong",[t._v("函数的参数")]),t._v("也是函数内部的"),s("strong",[t._v("局部变量")])]),t._v(" "),s("li",[s("strong",[t._v("不同函数")]),t._v("内部声明的变量"),s("strong",[t._v("无法互相访问")])]),t._v(" "),s("li",[t._v("函数"),s("strong",[t._v("执行完毕")]),t._v("后，函数"),s("strong",[t._v("内部的变量实际被清空")]),t._v("了")])]),t._v(" "),s("h3",{attrs:{id:"_1-2-块作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-块作用域"}},[t._v("#")]),t._v(" 1.2 块作用域")]),t._v(" "),s("blockquote",[s("p",[t._v("js中用"),s("code",[t._v("{}")]),t._v("包裹的代码称为代码块，代码块内部的变量外部 "),s("em",[s("strong",[t._v("有可能")])]),t._v(" 无法访问")])]),t._v(" "),s("ul",[s("li",[t._v("1."),s("code",[t._v("let")]),t._v("声明的变量会产生块作用域，"),s("code",[t._v("var")]),t._v(" 不会产生块作用域")]),t._v(" "),s("li",[t._v("2."),s("code",[t._v("const")]),t._v("声明的常量也会产生块作用域")]),t._v(" "),s("li",[t._v("3.不同代码块之间的变量无法互相访问")]),t._v(" "),s("li",[t._v("4.推荐使用 "),s("code",[t._v("let")]),t._v("或 "),s("code",[t._v("const")])])]),t._v(" "),s("p",[t._v("在for循环里声明"),s("code",[t._v("var")]),t._v("是可以被外部访问的，表面上看这是个块级作用域，但是因为使用var声明，所以不会产生块级作用域，"),s("strong",[t._v("大部分时候也只有这种情况会导致能访问")]),t._v("。")]),t._v(" "),s("h2",{attrs:{id:"_2、全局作用域"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、全局作用域"}},[t._v("#")]),t._v(" 2、全局作用域")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("script")]),t._v("标签和"),s("code",[t._v(".js")]),t._v("文件中最外层的就是所谓全局作用域,在此声明的变量在函数内部也能访问")])]),t._v(" "),s("ul",[s("li",[t._v("1.为 window 对象动态添加的属性默认也是全局的，不推荐！")]),t._v(" "),s("li",[t._v("2.函数中未使用任何关键字声明的变量为全局变量，不推荐！！！")]),t._v(" "),s("li",[t._v("3.尽可能少的声明全局变量，防止全局变量被污染")])]),t._v(" "),s("h2",{attrs:{id:"_3、作用域链"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、作用域链"}},[t._v("#")]),t._v(" 3、作用域链")]),t._v(" "),s("blockquote",[s("p",[t._v("本质上是底层的变量查找机制")]),t._v(" "),s("ul",[s("li",[t._v("函数执行时,会"),s("strong",[t._v("优先从当前函数作用域")]),t._v("中查找变量")]),t._v(" "),s("li",[t._v("如果当前作用域查找不到会"),s("strong",[t._v("依次逐级查找父级作用域")]),t._v("，直到全局作用域")])])]),t._v(" "),s("ul",[s("li",[t._v("1.套关系的作用域串联起来形成了作用域链")]),t._v(" "),s("li",[t._v("2.相同作用域链中按着从小到大的规则查找变量")]),t._v(" "),s("li",[t._v("3.子作用域能够访问父作用域，父级作用域无法访问子级作用域")])]),t._v(" "),s("h2",{attrs:{id:"_4、垃圾回收机制-garbage-collection"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、垃圾回收机制-garbage-collection"}},[t._v("#")]),t._v(" 4、垃圾回收机制（Garbage Collection）")]),t._v(" "),s("blockquote",[s("p",[t._v("JS中内存的分配和回收都是"),s("strong",[t._v("自动完成")]),t._v("的，内存在不使用时会被垃圾回收器自动回收。")])]),t._v(" "),s("h3",{attrs:{id:"_4-1-内存的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-1-内存的生命周期"}},[t._v("#")]),t._v(" 4.1 内存的生命周期")]),t._v(" "),s("p",[t._v("JS中分配的内存，一般有如下生命周期：")]),t._v(" "),s("ul",[s("li",[t._v("内存"),s("strong",[t._v("分配")]),t._v("：当我们声明变量、函数、对象的时候，系统会自动为他们分配内存")]),t._v(" "),s("li",[t._v("内存"),s("strong",[t._v("使用")]),t._v("：即读写内存，也就是使用变量、函数等")]),t._v(" "),s("li",[t._v("内存"),s("strong",[t._v("回收")]),t._v("：使用完毕，由垃圾回收器自动回收不再使用的内存")])]),t._v(" "),s("p",[t._v("全局变量不会被回收")]),t._v(" "),s("p",[t._v("大部分时候，局部变量不用了就会被自动回收掉")]),t._v(" "),s("blockquote",[s("p",[t._v("内存泄漏：因为某种原因，内存无法释放或未释放叫做内存泄漏")])]),t._v(" "),s("h3",{attrs:{id:"_4-2-算法说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-算法说明"}},[t._v("#")]),t._v(" 4.2 算法说明")]),t._v(" "),s("p",[t._v("堆栈分配：")]),t._v(" "),s("ul",[s("li",[t._v("栈：由操作系统自动分配释放"),s("strong",[t._v("函数的参数、局部变量等")]),t._v("，基本数据类型放到栈里")]),t._v(" "),s("li",[t._v("堆：一般由程序员分配释放，若程序员不释放，由垃圾回收机制回收。复杂数据类型放在堆里。")])]),t._v(" "),s("h4",{attrs:{id:"_4-2-1-引用计数法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-1-引用计数法"}},[t._v("#")]),t._v(" 4.2.1 引用计数法")]),t._v(" "),s("blockquote",[s("p",[t._v('IE采用的引用计数法，"内存不再使用"，就是看一个对象是否有指向它的引用，没有了就回收对象')])]),t._v(" "),s("p",[t._v("算法：")]),t._v(" "),s("ul",[s("li",[t._v("1.跟踪记录被引用的次数")]),t._v(" "),s("li",[t._v("2.如果被引用了一次，那么就记录次数1,多次引用会累加 ++")]),t._v(" "),s("li",[t._v("3.如果减少一个引用就减1 --")]),t._v(" "),s("li",[t._v("4.如果引用次数是0，则释放内存")])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("问题：嵌套引用的情况下，尽管他们不再使用，也不会回收")])])]),t._v(" "),s("h4",{attrs:{id:"_4-2-2-标记清除法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-2-2-标记清除法"}},[t._v("#")]),t._v(" 4.2.2 标记清除法")]),t._v(" "),s("blockquote",[s("p",[t._v("是引用计数法的改进")])]),t._v(" "),s("p",[t._v("核心:")]),t._v(" "),s("ul",[s("li",[t._v("1.标记清除算法将“不再使用的对象”定义为“无法达到的对象")]),t._v(" "),s("li",[t._v("2.就是从根部(在JS中就是全局对象)出发定时扫描内存中的对象。凡是能从根部到达的对象，都是还需要使用的。")]),t._v(" "),s("li",[t._v("3.那些无法由根部出发触及到的对象被标记为不再使用，稍后进行回收。")])]),t._v(" "),s("h2",{attrs:{id:"_5、闭包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、闭包"}},[t._v("#")]),t._v(" 5、闭包")]),t._v(" "),s("blockquote",[s("p",[t._v("一个函数对周围状态的引用捆绑在一起（也就是这个函数里面用了外层函数的变量之类的值），"),s("strong",[t._v("内层函数中访问到其外层函数的作用域")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("闭包= 内层函数+外层函数的变量")])])]),t._v(" "),s("blockquote",[s("p",[s("strong",[t._v("作用：封闭数据，提供操作，让外部也能访问内部数据")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" fn"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这里别加括号(),因为这返回的是fn调用后的返回值,而不是fn本身")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fn01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[t._v("或者简约写法，直接将return写到函数名上")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n           console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fn01 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("outer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn01")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("blockquote",[s("p",[s("strong",[t._v("可能会引起的问题：内存泄漏")])])]),t._v(" "),s("h2",{attrs:{id:"_6、变量提升"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6、变量提升"}},[t._v("#")]),t._v(" 6、变量提升")]),t._v(" "),s("blockquote",[s("p",[t._v("即变量在被声明前被访问，仅存在于"),s("code",[t._v("var")]),t._v("声明的变量中")])]),t._v(" "),s("p",[t._v("因为JS会把所有"),s("code",[t._v("var")]),t._v("声明的变量提升到整个作用域的最前面，然后在运行到"),s("code",[t._v("var")]),t._v("这一行再赋值")])])}),[],!1,null,null,null);s.default=_.exports}}]);